import { v4 as uuidv4 } from "uuid";

interface DataColumnType {
  field: string;
  headerName: string;
  width?: number;
  editable?: boolean;
}
export interface ElementType {
  type: string;
  label: string;
  icon: string;
  inputLabel: string;
  required?: boolean;
  inputType: string;
  maxLength?: number | null;
  minLength?: number | null;
  placeholder?: string;
  description?: string;
  isReadOnly?: boolean;
  isDisabled?: boolean;
  isRequired?: boolean;
  requiredMessage?: string;
  minLengthMessage?: string;
  maxLengthMessage?: string;
  value?: any;
  options?: Array<{ label: string; value: any; id: string; key?: string }>;
  columns?: number;
  gridId?: string;
  gridPosition?: Record<string, any>;
  maxAmount?: number | null;
  minAmount?: number | null;
  minAmountMessage?: string;
  maxAmountMessage?: string;
  prefix?: string | null;
  sectionId?: string;
  url?: string;
  method?: string;
  denominators?: null;
  responseType?: string;
  headerClass?: string;
  customClass?: string | null;
  elementClass?: string;
  dataColumns?: DataColumnType[];
  options2?:  Array<{ label: string; value: any; id: string; key?: string }>;
}

// The Elements array
export const Elements: ElementType[] = [
  {
    type: "basicText",
    label: "Basic Text",
    icon: "fluent:text-16-filled",
    inputLabel: "",
    required: false,
    inputType: "basicText",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "textField",
    label: "Text Field",
    icon: "fluent:text-16-filled",
    inputLabel: "Text Label",
    required: false,
    inputType: "text",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "longText",
    label: "Long Text Field",
    icon: "dashicons:text",
    inputLabel: "Long Text Label",
    required: false,
    inputType: "text",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "selectField",
    label: "Select List",
    icon: "tabler:select",
    inputLabel: "Select Text Label",
    required: false,
    inputType: "select",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    options: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
      },
    ],
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
    {
    type: "cascadeSelect",
    label: "Cascade Select",
    icon: "tabler:select",
    inputLabel: "Select Text Label",
    required: false,
    inputType: "select",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    options: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
        key: ""
      },
    ],
     options2: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
        key:""
      },
    ],
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "multiSelect",
    label: "MultiSelect",
    icon: "fluent-mdl2:multi-select",
    inputLabel: "Select Text Label",
    required: false,
    inputType: "select",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    options: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
      },
    ],
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "validateInput",
    label: "Validate Input",
    icon: "iconoir:www",
    inputLabel: "Validate Input Label",
    required: false,
    inputType: "validateInput",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Value is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    url: "https://api.example.com/validate?value={value}",
    method: "GET",
    responseType: "string",
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },

  {
    type: "numberField",
    label: "Number",
    icon: "octicon:number-16",
    inputLabel: "Number Label",
    required: false,
    inputType: "number",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "amountField",
    label: "Amount",
    icon: "carbon:currency",
    inputLabel: "Enter amount",
    required: false,
    inputType: "amount",
    maxAmount: null,
    minAmount: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minAmountMessage: "",
    maxAmountMessage: "",
    value: null,
    prefix: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "date",
    label: "Date",
    icon: "bx:calendar",
    inputLabel: "Date Text Label",
    required: false,
    inputType: "date",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "password",
    label: "Password",
    icon: "ic:round-password",
    inputLabel: "Password Text Label",
    required: false,
    inputType: "password",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "checkbox",
    label: "Checkbox",
    icon: "mingcute:checkbox-line",
    inputLabel: "Checkbox Text Label",
    required: false,
    inputType: "checkbox",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    options: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
      },
    ],
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "radio",
    label: "Radio select",
    icon: "ri:checkbox-circle-line",
    inputLabel: "Radio Text Label",
    required: false,
    inputType: "radio",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    options: [
      {
        label: "Placeholder 1",
        value: "",
        id: uuidv4(),
      },
    ],
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "email",
    label: "Email",
    icon: "mdi:email-outline",
    inputLabel: "Email Text Label",
    required: false,
    inputType: "email",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "file",
    label: "File Attachment",
    icon: "ion:attach-sharp",
    inputLabel: "File Text Label",
    required: false,
    inputType: "file",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Field is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "dataGrid",
    label: "Data Grid",
    icon: "iconoir:table",
    inputLabel: "Data Grid Label",
    required: false,
    inputType: "dataGrid",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Value is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: [],
    dataColumns: [
      { field: "firstName", headerName: "First Name", width: 150, editable: true },
    ],
    denominators: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "tableInput",
    label: "Table Input",
    icon: "iconoir:table",
    inputLabel: "Table Input Label",
    required: false,
    inputType: "tableInput",
    maxLength: null,
    minLength: null,
    placeholder: "Type here",
    description: "",
    isReadOnly: false,
    isDisabled: false,
    isRequired: false,
    requiredMessage: "Value is required",
    minLengthMessage: "",
    maxLengthMessage: "",
    value: [],
    denominators: null,
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },

  {
    type: "divider",
    label: "Divider",
    icon: "pixel:divider",
    inputLabel: "",
    inputType: "divider",
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "spacer",
    label: "Spacer",
    icon: "fluent-mdl2:spacer",
    inputLabel: "",
    inputType: "spacer",
    customClass: "",
    elementClass: "",
    gridPosition: null,
    gridId: null,
  },
  {
    type: "grid",
    label: "Grid",
    icon: "cuida:grid-outline",
    inputLabel: "",
    inputType: "grid",
    placeholder: "Type here",
    description: "",
    columns: 2,
  },
];

export const AllowValidationPrefix: string[] = ["amount"];
export const AllowValidationMaxMin: string[] = ["text", "number"];
export const AllowValidationPlaceholder: string[] = [
  "text",
  "number",
  "amount",
  "date",
  "password",
];
export const AllowValidationAmount: string[] = ["amount"];
export const noAllowValidation: string[] = [
  "grid",
  "section",
  "divider",
  "spacer",
  "basicText",
];
export const AllowOptions: string[] = [
  "radio",
  "select",
  "checkbox",
  "multiselect",
];
export const AllowApiOptions: string[] = ["validateInput"];
export const AllowTableOptions: string[] = ["tableInput"];
export const AllowTextOptions: string[] = ["text"];
export const noAllowEdit: string[] = ["divider", "spacer"];
export const allowValue: string[] = ["basicText"];
